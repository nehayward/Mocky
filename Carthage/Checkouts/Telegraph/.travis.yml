language: objective-c
osx_image: xcode10

branches:
  only:
    - master

cache:
  directories:
    - $HOME/Library/Caches/org.carthage.CarthageKit/dependencies
    - Carthage

env:
  global:
    - LANG=en_US.UTF-8
    - LC_CTYPE=en_US.UTF-8
    - WORKSPACE=Telegraph.xcworkspace
  matrix:
    # Latest devices
    - DESTINATION="platform=iOS Simulator,name=iPhone XS"                 SCHEME="Telegraph iOS"      RUN_TESTS="YES"
    - DESTINATION="platform=iOS Simulator,name=iPhone XR"                 SCHEME="Telegraph iOS"      RUN_TESTS="NO"
    - DESTINATION="platform=iOS Simulator,name=iPad Pro (12.9-inch)"      SCHEME="Telegraph iOS"      RUN_TESTS="NO"
    - DESTINATION="platform=tvOS Simulator,name=Apple TV"                 SCHEME="Telegraph tvOS"     RUN_TESTS="NO"
    - DESTINATION="platform=macOS,arch=x86_64"                            SCHEME="Telegraph macOS"    RUN_TESTS="NO"

    # Older devices
    - DESTINATION="platform=iOS Simulator,name=iPad 2,OS=8.1"             SCHEME="Telegraph iOS"      RUN_TESTS="NO"
    - DESTINATION="platform=iOS Simulator,name=iPhone 5s,OS=8.4"          SCHEME="Telegraph iOS"      RUN_TESTS="NO"
    - DESTINATION="platform=iOS Simulator,name=iPhone 6,OS=9.3"           SCHEME="Telegraph iOS"      RUN_TESTS="NO"
    - DESTINATION="platform=iOS Simulator,name=iPhone 7 Plus,OS=10.3.1"   SCHEME="Telegraph iOS"      RUN_TESTS="NO"
    - DESTINATION="platform=iOS Simulator,name=iPhone 8,OS=11.4"          SCHEME="Telegraph iOS"      RUN_TESTS="NO"

before_install:
  # Install Carthage and XCPretty
  - brew outdated carthage || brew upgrade carthage
  - gem install xcpretty --no-rdoc --no-ri --no-document --quiet

before_script:
  # Build the dependencies
  - carthage bootstrap --cache-builds

script:
  # Produce a failure return code if any command errors
  - set -o pipefail

  # Build in Debug mode
  - xcodebuild clean build -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Debug ONLY_ACTIVE_ARCH=NO | xcpretty -c;

  # Build in Release mode
  - xcodebuild clean build -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO | xcpretty -c;

  # Run the tests
  - if [ $RUN_TESTS == "YES" ]; then
      xcodebuild test -workspace "$WORKSPACE" -scheme "$SCHEME" -destination "$DESTINATION" -configuration Release ONLY_ACTIVE_ARCH=NO ENABLE_TESTABILITY=YES | xcpretty -c;
    fi
